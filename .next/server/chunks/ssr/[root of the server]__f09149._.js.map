{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/raxana/Documents/GitHub/atmMoneyTransferPrototipe/src/lib/AtmContext.tsx"],"sourcesContent":["'use client';\n\nimport React, { createContext, useContext, useState, ReactNode } from 'react';\n\ntype AtmStep = 'insert-card' | 'enter-pin' | 'select-operation' | 'enter-amount' | 'confirm-transfer' | 'transaction-result';\n\ninterface AtmContextType {\n  currentStep: AtmStep;\n  cardNumber: string;\n  pin: string;\n  destinationCard: string;\n  amount: number;\n  error: string;\n  balance: number | null;\n  setCardNumber: (cardNumber: string) => void;\n  setPin: (pin: string) => void;\n  setDestinationCard: (cardNumber: string) => void;\n  setAmount: (amount: number) => void;\n  setError: (error: string) => void;\n  setBalance: (balance: number | null) => void;\n  nextStep: () => void;\n  prevStep: () => void;\n  resetAtm: () => void;\n}\n\nconst AtmContext = createContext<AtmContextType | undefined>(undefined);\n\nexport function AtmProvider({ children }: { children: ReactNode }) {\n  const [currentStep, setCurrentStep] = useState<AtmStep>('insert-card');\n  const [cardNumber, setCardNumber] = useState('');\n  const [pin, setPin] = useState('');\n  const [destinationCard, setDestinationCard] = useState('');\n  const [amount, setAmount] = useState(0);\n  const [error, setError] = useState('');\n  const [balance, setBalance] = useState<number | null>(null);\n\n  const steps: AtmStep[] = [\n    'insert-card',\n    'enter-pin',\n    'select-operation',\n    'enter-amount',\n    'transaction-result'\n  ];\n\n  const nextStep = () => {\n    const currentIndex = steps.indexOf(currentStep);\n    if (currentIndex < steps.length - 1) {\n      setCurrentStep(steps[currentIndex + 1]);\n    }\n  };\n\n  const prevStep = () => {\n    const currentIndex = steps.indexOf(currentStep);\n    if (currentIndex > 0) {\n      setCurrentStep(steps[currentIndex - 1]);\n    }\n  };\n\n  const resetAtm = () => {\n    setCurrentStep('insert-card');\n    setCardNumber('');\n    setPin('');\n    setDestinationCard('');\n    setAmount(0);\n    setError('');\n    setBalance(null);\n  };\n\n  return (\n    <AtmContext.Provider\n      value={{\n        currentStep,\n        cardNumber,\n        pin,\n        destinationCard,\n        amount,\n        error,\n        balance,\n        setCardNumber,\n        setPin,\n        setDestinationCard,\n        setAmount,\n        setError,\n        setBalance,\n        nextStep,\n        prevStep,\n        resetAtm\n      }}\n    >\n      {children}\n    </AtmContext.Provider>\n  );\n}\n\nexport function useAtm() {\n  const context = useContext(AtmContext);\n  if (context === undefined) {\n    throw new Error('useAtm must be used within an AtmProvider');\n  }\n  return context;\n}"],"names":[],"mappings":";;;;;AAEA;AAFA;;;AAyBA,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAA8B;AAEtD,SAAS,YAAY,EAAE,QAAQ,EAA2B;IAC/D,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAW;IACxD,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,KAAK,OAAO,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/B,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAEtD,MAAM,QAAmB;QACvB;QACA;QACA;QACA;QACA;KACD;IAED,MAAM,WAAW;QACf,MAAM,eAAe,MAAM,OAAO,CAAC;QACnC,IAAI,eAAe,MAAM,MAAM,GAAG,GAAG;YACnC,eAAe,KAAK,CAAC,eAAe,EAAE;QACxC;IACF;IAEA,MAAM,WAAW;QACf,MAAM,eAAe,MAAM,OAAO,CAAC;QACnC,IAAI,eAAe,GAAG;YACpB,eAAe,KAAK,CAAC,eAAe,EAAE;QACxC;IACF;IAEA,MAAM,WAAW;QACf,eAAe;QACf,cAAc;QACd,OAAO;QACP,mBAAmB;QACnB,UAAU;QACV,SAAS;QACT,WAAW;IACb;IAEA,qBACE,8OAAC,WAAW,QAAQ;QAClB,OAAO;YACL;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;QACF;kBAEC;;;;;;AAGP;AAEO,SAAS;IACd,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT"}},
    {"offset": {"line": 94, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 100, "column": 0}, "map": {"version":3,"sources":["file:///Users/raxana/Documents/GitHub/atmMoneyTransferPrototipe/src/lib/mockData.ts"],"sourcesContent":["export interface Account {\n  cardNumber: string;\n  pin: string;\n  balance: number;\n  accountHolder: string;\n}\n\nexport interface TransactionResult {\n  success: boolean;\n  message: string;\n  newBalance?: number;\n}\n\nconst accounts: Account[] = [\n  {\n    cardNumber: '1234567890123456',\n    pin: '1234',\n    balance: 5000,\n    accountHolder: 'John Doe'\n  },\n  {\n    cardNumber: '9876543210987654',\n    pin: '4321',\n    balance: 3000,\n    accountHolder: 'Jane Smith'\n  }\n];\n\nexport const validatePin = (cardNumber: string, pin: string): boolean => {\n  const account = accounts.find(acc => acc.cardNumber === cardNumber);\n  return account?.pin === pin;\n};\n\nexport const getAccountBalance = (cardNumber: string): number | null => {\n  const account = accounts.find(acc => acc.cardNumber === cardNumber);\n  return account ? account.balance : null;\n};\n\nexport const validateTransfer = (\n  fromCard: string,\n  toCard: string,\n  amount: number\n): TransactionResult => {\n  const sourceAccount = accounts.find(acc => acc.cardNumber === fromCard);\n  const destAccount = accounts.find(acc => acc.cardNumber === toCard);\n\n  if (!sourceAccount) {\n    return { success: false, message: 'Source account not found' };\n  }\n\n  if (!destAccount) {\n    return { success: false, message: 'Destination account not found' };\n  }\n\n  if (amount <= 0) {\n    return { success: false, message: 'Invalid transfer amount' };\n  }\n\n  if (sourceAccount.balance < amount) {\n    return { success: false, message: 'Insufficient funds' };\n  }\n\n  // Simulate transfer\n  sourceAccount.balance -= amount;\n  destAccount.balance += amount;\n\n  return {\n    success: true,\n    message: `Transfer of $${amount.toLocaleString()} from ${sourceAccount.accountHolder} to ${destAccount.accountHolder} was successful`,\n    newBalance: sourceAccount.balance\n  };\n};"],"names":[],"mappings":";;;;;AAaA,MAAM,WAAsB;IAC1B;QACE,YAAY;QACZ,KAAK;QACL,SAAS;QACT,eAAe;IACjB;IACA;QACE,YAAY;QACZ,KAAK;QACL,SAAS;QACT,eAAe;IACjB;CACD;AAEM,MAAM,cAAc,CAAC,YAAoB;IAC9C,MAAM,UAAU,SAAS,IAAI,CAAC,CAAA,MAAO,IAAI,UAAU,KAAK;IACxD,OAAO,SAAS,QAAQ;AAC1B;AAEO,MAAM,oBAAoB,CAAC;IAChC,MAAM,UAAU,SAAS,IAAI,CAAC,CAAA,MAAO,IAAI,UAAU,KAAK;IACxD,OAAO,UAAU,QAAQ,OAAO,GAAG;AACrC;AAEO,MAAM,mBAAmB,CAC9B,UACA,QACA;IAEA,MAAM,gBAAgB,SAAS,IAAI,CAAC,CAAA,MAAO,IAAI,UAAU,KAAK;IAC9D,MAAM,cAAc,SAAS,IAAI,CAAC,CAAA,MAAO,IAAI,UAAU,KAAK;IAE5D,IAAI,CAAC,eAAe;QAClB,OAAO;YAAE,SAAS;YAAO,SAAS;QAA2B;IAC/D;IAEA,IAAI,CAAC,aAAa;QAChB,OAAO;YAAE,SAAS;YAAO,SAAS;QAAgC;IACpE;IAEA,IAAI,UAAU,GAAG;QACf,OAAO;YAAE,SAAS;YAAO,SAAS;QAA0B;IAC9D;IAEA,IAAI,cAAc,OAAO,GAAG,QAAQ;QAClC,OAAO;YAAE,SAAS;YAAO,SAAS;QAAqB;IACzD;IAEA,oBAAoB;IACpB,cAAc,OAAO,IAAI;IACzB,YAAY,OAAO,IAAI;IAEvB,OAAO;QACL,SAAS;QACT,SAAS,CAAC,aAAa,EAAE,OAAO,cAAc,GAAG,MAAM,EAAE,cAAc,aAAa,CAAC,IAAI,EAAE,YAAY,aAAa,CAAC,eAAe,CAAC;QACrI,YAAY,cAAc,OAAO;IACnC;AACF"}},
    {"offset": {"line": 163, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 169, "column": 0}, "map": {"version":3,"sources":["file:///Users/raxana/Documents/GitHub/atmMoneyTransferPrototipe/src/components/AtmMachine.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { useAtm } from '../lib/AtmContext';\nimport { validatePin, validateTransfer, getAccountBalance } from '../lib/mockData';\n\nexport default function AtmMachine() {\n  const {\n    currentStep,\n    cardNumber,\n    pin,\n    destinationCard,\n    amount,\n    error,\n    balance,\n    setCardNumber,\n    setPin,\n    setDestinationCard,\n    setAmount,\n    setError,\n    setBalance,\n    nextStep,\n    prevStep,\n    resetAtm\n  } = useAtm();\n\n  const handleCardSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (cardNumber.length !== 16) {\n      setError('Invalid card number');\n      return;\n    }\n    setError('');\n    nextStep();\n  };\n\n  const handlePinSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (validatePin(cardNumber, pin)) {\n      const balance = getAccountBalance(cardNumber);\n      setBalance(balance);\n      setError('');\n      nextStep();\n    } else {\n      setError('Invalid PIN');\n    }\n  };\n\n  const handleTransferSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!destinationCard || destinationCard.length !== 16) {\n      setError('Invalid destination card number');\n      return;\n    }\n    if (!amount || amount <= 0) {\n      setError('Please enter a valid amount');\n      return;\n    }\n    const result = validateTransfer(cardNumber, destinationCard, amount);\n    setBalance(result.newBalance || null);\n    setError(result.success ? '' : result.message);\n    nextStep();\n  };\n\n  const renderStep = () => {\n    switch (currentStep) {\n      case 'insert-card':\n        return (\n          <form onSubmit={handleCardSubmit} className=\"space-y-6\">\n            <div className=\"relative\">\n              <input\n                type=\"text\"\n                value={cardNumber}\n                onChange={(e) => setCardNumber(e.target.value)}\n                placeholder=\"Enter card number\"\n                className=\"w-full px-4 py-3 border-2 border-gray-200 rounded-lg focus:outline-none focus:border-blue-500 transition-colors text-lg\"\n                maxLength={16}\n              />\n              <div className=\"absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none\">\n                <svg className=\"h-6 w-6 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z\" />\n                </svg>\n              </div>\n            </div>\n            <button\n              type=\"submit\"\n              className=\"w-full bg-gradient-to-r from-blue-500 to-blue-600 text-white py-3 rounded-lg text-lg font-semibold hover:from-blue-600 hover:to-blue-700 transition-all duration-200 shadow-lg hover:shadow-xl\"\n            >\n              Insert Card\n            </button>\n          </form>\n        );\n\n      case 'enter-pin':\n        return (\n          <form onSubmit={handlePinSubmit} className=\"space-y-6\">\n            <div className=\"relative\">\n              <input\n                type=\"password\"\n                name=\"pin\"\n                value={pin}\n                onChange={(e) => setPin(e.target.value)}\n                placeholder=\"Enter PIN\"\n                maxLength={4}\n                className=\"w-full px-4 py-3 border-2 border-gray-200 rounded-lg focus:outline-none focus:border-blue-500 transition-colors text-lg tracking-widest\"\n              />\n              <div className=\"absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none\">\n                <svg className=\"h-6 w-6 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" />\n                </svg>\n              </div>\n            </div>\n            <button\n              type=\"submit\"\n              className=\"w-full bg-gradient-to-r from-blue-500 to-blue-600 text-white py-3 rounded-lg text-lg font-semibold hover:from-blue-600 hover:to-blue-700 transition-all duration-200 shadow-lg hover:shadow-xl\"\n            >\n              Submit PIN\n            </button>\n          </form>\n        );\n\n      case 'select-operation':\n        return (\n          <div className=\"space-y-6\">\n            <div className=\"bg-gray-50 p-6 rounded-lg border-2 border-gray-200\">\n              <p className=\"text-gray-600 text-sm font-medium mb-2\">Current Balance</p>\n              <p className=\"text-3xl font-bold text-gray-900\">${balance?.toLocaleString()}</p>\n            </div>\n            <button\n              onClick={nextStep}\n              className=\"w-full bg-gradient-to-r from-blue-500 to-blue-600 text-white py-3 rounded-lg text-lg font-semibold hover:from-blue-600 hover:to-blue-700 transition-all duration-200 shadow-lg hover:shadow-xl flex items-center justify-center space-x-2\"\n            >\n              <svg className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 7h12m0 0l-4-4m4 4l-4 4m0 6H4m0 0l4 4m-4-4l4-4\" />\n              </svg>\n              <span>Transfer Money</span>\n            </button>\n          </div>\n        );\n\n      case 'enter-amount':\n        return (\n          <form onSubmit={handleTransferSubmit} className=\"space-y-6\">\n            <div className=\"relative\">\n              <input\n                type=\"text\"\n                value={destinationCard}\n                onChange={(e) => setDestinationCard(e.target.value)}\n                placeholder=\"Enter destination card number\"\n                className=\"w-full px-4 py-3 border-2 border-gray-200 rounded-lg focus:outline-none focus:border-blue-500 transition-colors text-lg\"\n                maxLength={16}\n              />\n              <div className=\"absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none\">\n                <svg className=\"h-6 w-6 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z\" />\n                </svg>\n              </div>\n            </div>\n            <div className=\"relative\">\n              <input\n                type=\"number\"\n                value={amount}\n                onChange={(e) => setAmount(Number(e.target.value))}\n                placeholder=\"Enter amount\"\n                className=\"w-full px-4 py-3 border-2 border-gray-200 rounded-lg focus:outline-none focus:border-blue-500 transition-colors text-lg\"\n                min=\"0\"\n              />\n              <div className=\"absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none\">\n                <span className=\"text-gray-400 text-lg\">$</span>\n              </div>\n            </div>\n            <button\n              type=\"submit\"\n              className=\"w-full bg-gradient-to-r from-blue-500 to-blue-600 text-white py-3 rounded-lg text-lg font-semibold hover:from-blue-600 hover:to-blue-700 transition-all duration-200 shadow-lg hover:shadow-xl\"\n            >\n              Transfer\n            </button>\n          </form>\n        );\n\n      case 'transaction-result':\n        return (\n          <div className=\"space-y-6\">\n            <div className={`p-6 rounded-lg border-2 ${error ? 'bg-red-50 border-red-200' : 'bg-white border-gray-200 shadow-lg'}`}>\n              {error ? (\n                <div className=\"text-center\">\n                  <div className=\"flex justify-center mb-4\">\n                    <svg className=\"h-16 w-16 text-red-500\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                    </svg>\n                  </div>\n                  <h2 className=\"text-2xl font-bold text-red-700 mb-2\">Transfer Failed</h2>\n                  <p className=\"text-red-600 mb-4\">{error}</p>\n                </div>\n              ) : (\n                <div>\n                  <div className=\"text-center mb-6\">\n                    <svg className=\"h-16 w-16 text-green-500 mx-auto mb-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                    </svg>\n                    <h2 className=\"text-2xl font-bold text-gray-800 mb-1\">Transfer Receipt</h2>\n                    <p className=\"text-sm text-green-600 font-medium\">Transaction completed successfully</p>\n                  </div>\n                  \n                  <div className=\"space-y-4\">\n                    <div className=\"bg-gray-50 p-4 rounded-lg\">\n                      <h3 className=\"text-sm font-medium text-gray-500 mb-3\">Transaction Details</h3>\n                      <div className=\"space-y-2\">\n                        <div className=\"flex justify-between items-center\">\n                          <span className=\"text-gray-600\">Date & Time:</span>\n                          <span className=\"font-medium\">{new Date().toLocaleString()}</span>\n                        </div>\n                        <div className=\"flex justify-between items-center\">\n                          <span className=\"text-gray-600\">Transaction Type:</span>\n                          <span className=\"font-medium\">Money Transfer</span>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"bg-gray-50 p-4 rounded-lg\">\n                      <h3 className=\"text-sm font-medium text-gray-500 mb-3\">Account Information</h3>\n                      <div className=\"space-y-2\">\n                        <div className=\"flex justify-between items-center\">\n                          <span className=\"text-gray-600\">From Account:</span>\n                          <span className=\"font-medium\">{cardNumber.replace(/(.{4})/g, '$1 ').trim()}</span>\n                        </div>\n                        <div className=\"flex justify-between items-center\">\n                          <span className=\"text-gray-600\">To Account:</span>\n                          <span className=\"font-medium\">{destinationCard.replace(/(.{4})/g, '$1 ').trim()}</span>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"bg-gray-50 p-4 rounded-lg\">\n                      <h3 className=\"text-sm font-medium text-gray-500 mb-3\">Amount Details</h3>\n                      <div className=\"space-y-2\">\n                        <div className=\"flex justify-between items-center\">\n                          <span className=\"text-gray-600\">Transfer Amount:</span>\n                          <span className=\"font-medium text-green-600\">${amount.toLocaleString()}</span>\n                        </div>\n                        <div className=\"flex justify-between items-center\">\n                          <span className=\"text-gray-600\">New Balance:</span>\n                          <span className=\"font-bold text-gray-800\">${balance?.toLocaleString()}</span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"mt-6 pt-4 border-t border-gray-200\">\n                    <p className=\"text-xs text-gray-500 text-center\">Please keep this receipt for your records</p>\n                  </div>\n                </div>\n              )}\n            </div>\n            \n            <button\n              onClick={resetAtm}\n              className=\"w-full bg-gradient-to-r from-blue-500 to-blue-600 text-white py-3 rounded-lg text-lg font-semibold hover:from-blue-600 hover:to-blue-700 transition-all duration-200 shadow-lg hover:shadow-xl\"\n            >\n              Start New Transaction\n            </button>\n          </div>\n        );\n\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-50 to-gray-100 flex items-center justify-center p-4\">\n      <div className=\"bg-white p-8 rounded-2xl shadow-2xl w-full max-w-md\">\n        <h1 className=\"text-3xl font-bold mb-8 text-center bg-clip-text text-transparent bg-gradient-to-r from-blue-600 to-blue-800\">ATM Machine</h1>\n        \n        {/* Added Account Information Display */}\n        <div className=\"mb-6 p-4 bg-gray-50 rounded-lg text-sm\">\n          <h2 className=\"font-bold mb-2 text-gray-700\">Test Accounts:</h2>\n          <div className=\"space-y-4\">\n            <div>\n              <p className=\"font-medium\">Account 1:</p>\n              <p>Card: 1234567890123456</p>\n              <p>PIN: 1234</p>\n            </div>\n            <div>\n              <p className=\"font-medium\">Account 2:</p>\n              <p>Card: 9876543210987654</p>\n              <p>PIN: 4321</p>\n            </div>\n          </div>\n        </div>\n\n        {error && (\n          <div className=\"bg-red-50 border-l-4 border-red-500 p-4 rounded-lg mb-6\">\n            <div className=\"flex\">\n              <div className=\"flex-shrink-0\">\n                <svg className=\"h-5 w-5 text-red-500\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                </svg>\n              </div>\n              <div className=\"ml-3\">\n                <p className=\"text-sm text-red-700\">{error}</p>\n              </div>\n            </div>\n          </div>\n        )}\n        <div className=\"mb-6\">{renderStep()}</div>\n        {currentStep !== 'insert-card' && currentStep !== 'transaction-result' && (\n          <button\n            onClick={prevStep}\n            className=\"w-full bg-gray-100 text-gray-700 py-3 rounded-lg text-lg font-semibold hover:bg-gray-200 transition-all duration-200 flex items-center justify-center space-x-2\"\n          >\n            <svg className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n            </svg>\n            <span>Back</span>\n          </button>\n        )}\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1140, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1146, "column": 0}, "map": {"version":3,"sources":["file:///Users/raxana/Documents/GitHub/atmMoneyTransferPrototipe/src/app/page.tsx"],"sourcesContent":["'use client';\n\nimport { AtmProvider } from '../lib/AtmContext';\nimport AtmMachine from '../components/AtmMachine';\n\nexport default function Home() {\n  return (\n    <AtmProvider>\n      <AtmMachine />\n    </AtmProvider>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKe,SAAS;IACtB,qBACE,8OAAC,yHAAA,CAAA,cAAW;kBACV,cAAA,8OAAC,gIAAA,CAAA,UAAU;;;;;;;;;;AAGjB"}},
    {"offset": {"line": 1169, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1179, "column": 0}, "map": {"version":3,"sources":["file:///Users/raxana/Documents/GitHub/atmMoneyTransferPrototipe/node_modules/next/src/server/route-modules/app-page/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n    } else if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n    } else if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK"],"mappings":";AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,uBAA2B,EAAF;;IAQzC,OAAO;QACL,IAAIN,QAAQC,GAAG,CAACM,QAAQ,KAAK,WAAe;YAC1CJ,OAAOC,OAAO,GAAGC,QAAQ;QAC3B,OAAO,IAAIL,QAAQC,GAAG,CAACO,SAAS,EAAE;;QAIlC;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 1193, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1198, "column": 0}, "map": {"version":3,"sources":["file:///Users/raxana/Documents/GitHub/atmMoneyTransferPrototipe/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,0HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0]}},
    {"offset": {"line": 1200, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1205, "column": 0}, "map": {"version":3,"sources":["file:///Users/raxana/Documents/GitHub/atmMoneyTransferPrototipe/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored['react-ssr'].React\n"],"names":["module","exports","require","vendored","React"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,0HAAyBC,QAAQ,CAAC,YAAY,CAACC,KAAK","ignoreList":[0]}},
    {"offset": {"line": 1207, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}